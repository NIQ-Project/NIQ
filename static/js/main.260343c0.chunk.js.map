{"version":3,"sources":["components/AuthenticatedRoute/AuthenticatedRoute.js","components/AutoDismissAlert/AutoDismissAlert.js","components/pictures/NavBarLogo.png","components/Header/Header.js","apiConfig.js","api/auth.js","components/auth/SignUp.js","components/AutoDismissAlert/messages.js","components/auth/SignIn.js","components/auth/SignOut.js","components/auth/ChangePassword.js","api/list.js","components/list/CreateList.js","components/list/IndexList.js","api/task.js","components/task/ShowTask.js","components/list/ShowList.js","components/list/UpdateList.js","components/task/CreateTask.js","components/task/UpdateTask.js","components/pictures/BigLogoM.png","components/Home/Home.js","App.js","index.js"],"names":["AuthenticatedRoute","user","Component","component","render","rest","props","to","AutoDismissAlert","handleClose","setState","show","state","timeoutId","this","setTimeout","clearTimeout","variant","heading","message","deleteAlert","id","Alert","dismissible","onClose","className","Heading","React","authenticatedOptions","unauthenticatedOptions","alwaysOptions","exact","Header","Navbar","style","backdropFilter","expand","Brand","height","marginLeft","src","logo","Toggle","aria-controls","Collapse","Nav","email","apiUrls","apiUrl","window","location","hostname","signIn","credentials","axios","url","method","data","password","SignUp","handleChange","event","target","name","value","onSignUp","preventDefault","msgAlert","history","setUser","password_confirmation","passwordConfirmation","then","res","push","catch","error","Form","onSubmit","Group","controlId","Label","Control","required","type","placeholder","onChange","Button","width","marginTop","withRouter","SignIn","onSignIn","SignOut","clearUser","headers","Authorization","token","signOut","finally","ChangePassword","onChangePassword","passwords","old","oldPassword","new","newPassword","changePassword","showList","CreateList","months","copiedList","Object","assign","list","month","dropdownMonth","handleSubmit","createList","_id","err","date","Date","dropdownJSX","filter","i","getMonth","map","Dropdown","Item","onClick","indexOf","Menu","IndexList","componentDidMount","indexList","lists","console","loading","listJsx","length","owner","fontSize","color","margin","updateTask","taskData","taskId","task","ShowTask","complete","match","copiedTask","done","params","deleteTask","Card","Body","Title","overflow","item","position","top","pathname","ShowList","destroy","deleteList","deleted","showTasks","tasks","display","flexWrap","UpdateList","listData","updateList","CreateTask","createTask","UpdateTask","showTask","Home","BigLogoM","App","msgAlerts","msg","uuid","path","appJsx","basename","process","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.260343c0.chunk.js","sourcesContent":["import React from 'react'\r\nimport { Route, Redirect } from 'react-router-dom'\r\n\r\n// props will include a `user` object or empty object\r\n// props will include a `component` as `Component` or a `render`\r\n// all other props that may be passed in are `..rest`\r\nconst AuthenticatedRoute = ({\r\n  user,\r\n  component: Component,\r\n  render,\r\n  ...rest\r\n}) => {\r\n  // if props include a `user` object and a `render` then create route with `render`\r\n  if (user && render) {\r\n    return <Route {...rest} render={render} />\r\n\r\n    // if props include a `user` object but no `render` then create route with `Component`\r\n    // if props do not include a `user` object then redirect to home\r\n  } else {\r\n    return (\r\n      <Route\r\n        {...rest}\r\n        render={(props) =>\r\n          user ? <Component {...props} /> : <Redirect to='/' />\r\n        }\r\n      />\r\n    )\r\n  }\r\n}\r\n\r\nexport default AuthenticatedRoute\r\n","import React from 'react'\r\nimport Alert from 'react-bootstrap/Alert'\r\n\r\nimport './AutoDismissAlert.scss'\r\n\r\nclass AutoDismissAlert extends React.Component {\r\n  constructor (props) {\r\n    super(props)\r\n    this.state = {\r\n      show: true\r\n    }\r\n    this.timeoutId = null\r\n  }\r\n\r\n  componentDidMount () {\r\n    this.timeoutId = setTimeout(this.handleClose, 5000)\r\n  }\r\n\r\n  componentWillUnmount () {\r\n    clearTimeout(this.timeoutId)\r\n  }\r\n\r\nhandleClose = () => this.setState({ show: false })\r\n\r\nrender () {\r\n  const { variant, heading, message, deleteAlert, id } = this.props\r\n\r\n  // Delete this alert after the fade animation time (300 ms by default)\r\n  if (!this.state.show) {\r\n    setTimeout(() => {\r\n      deleteAlert(id)\r\n    }, 300)\r\n  }\r\n\r\n  return (\r\n    <Alert\r\n      dismissible\r\n      show={this.state.show}\r\n      variant={variant}\r\n      onClose={this.handleClose}>\r\n      <div className='container'>\r\n        <Alert.Heading className='alert-body'>{heading}</Alert.Heading>\r\n        <p className='alert-body'>{message}</p>\r\n      </div>\r\n    </Alert>\r\n  )\r\n}\r\n}\r\n\r\nexport default AutoDismissAlert\r\n","export default __webpack_public_path__ + \"static/media/NavBarLogo.6cbb026d.png\";","import React, { Fragment } from 'react'\r\nimport Nav from 'react-bootstrap/Nav'\r\nimport Navbar from 'react-bootstrap/Navbar'\r\nimport { Link, NavLink } from 'react-router-dom'\r\nimport logo from '../pictures/NavBarLogo.png'\r\n\r\nconst authenticatedOptions = (\r\n  <Fragment>\r\n    <NavLink to='/lists' className='nav-link px-5'>View Lists</NavLink>\r\n    <NavLink to='/change-password' className='nav-link px-5'>Change Password</NavLink>\r\n    <NavLink to='/sign-out' className='nav-link px-5'>Sign Out</NavLink>\r\n  </Fragment>\r\n)\r\n\r\nconst unauthenticatedOptions = (\r\n  <Fragment>\r\n    <NavLink to='/sign-up' className='nav-link px-5'>Sign Up</NavLink>\r\n    <NavLink to='/sign-in' className='nav-link px-5'>Sign In</NavLink>\r\n  </Fragment>\r\n)\r\n\r\nconst alwaysOptions = (\r\n  <Fragment>\r\n    <NavLink exact to='/' className='nav-link px-5'>Home</NavLink>\r\n  </Fragment>\r\n)\r\n\r\nconst Header = ({ user }) => (\r\n  <Navbar style={{ backdropFilter: 'blur(6px)' }} className='fixed-bottom' variant='dark' expand='md'>\r\n    <Navbar.Brand>\r\n      <Link to='/'><img style={{ height: '5vh', marginLeft: '5px' }} src={logo}/></Link>\r\n    </Navbar.Brand>\r\n    <Navbar.Toggle aria-controls='basic-navbar-nav' className='nav-icon' />\r\n    <Navbar.Collapse id='basic-navbar-nav' className='text-center'>\r\n      <Nav>\r\n        {user && (\r\n          <span className='navbar-text mr-2'>Welcome, {user.email}</span>\r\n        )}\r\n        {alwaysOptions}\r\n        {user ? authenticatedOptions : unauthenticatedOptions}\r\n      </Nav>\r\n    </Navbar.Collapse>\r\n  </Navbar>\r\n)\r\n\r\nexport default Header\r\n","let apiUrl\r\nconst apiUrls = {\r\n  production: 'https://monthly-backend.herokuapp.com/',\r\n  development: 'http://localhost:3002'\r\n}\r\n\r\nif (window.location.hostname === 'localhost') {\r\n  apiUrl = apiUrls.development\r\n} else {\r\n  apiUrl = apiUrls.production\r\n}\r\n\r\nexport default apiUrl\r\n","import apiUrl from '../apiConfig'\r\nimport axios from 'axios'\r\n\r\nexport const signUp = (credentials) => {\r\n  return axios({\r\n    method: 'POST',\r\n    url: apiUrl + '/sign-up/',\r\n    data: {\r\n      credentials: {\r\n        email: credentials.email,\r\n        password: credentials.password,\r\n        password_confirmation: credentials.passwordConfirmation\r\n      }\r\n    }\r\n  })\r\n}\r\n\r\nexport const signIn = (credentials) => {\r\n  return axios({\r\n    url: apiUrl + '/sign-in/',\r\n    method: 'POST',\r\n    data: {\r\n      credentials: {\r\n        email: credentials.email,\r\n        password: credentials.password\r\n      }\r\n    }\r\n  })\r\n}\r\n\r\nexport const signOut = (user) => {\r\n  return axios({\r\n    url: apiUrl + '/sign-out/',\r\n    method: 'DELETE',\r\n    headers: {\r\n      Authorization: `Bearer ${user.token}`\r\n    }\r\n  })\r\n}\r\n\r\nexport const changePassword = (passwords, user) => {\r\n  return axios({\r\n    url: apiUrl + '/change-password/',\r\n    method: 'PATCH',\r\n    headers: {\r\n      Authorization: `Bearer ${user.token}`\r\n    },\r\n    data: {\r\n      passwords: {\r\n        old: passwords.oldPassword,\r\n        new: passwords.newPassword\r\n      }\r\n    }\r\n  })\r\n}\r\n","import React, { Component } from 'react'\r\nimport { withRouter } from 'react-router-dom'\r\n\r\nimport { signUp, signIn } from '../../api/auth'\r\nimport { signUpSuccess, signUpFailure } from '../AutoDismissAlert/messages'\r\n\r\nimport Form from 'react-bootstrap/Form'\r\nimport Button from 'react-bootstrap/Button'\r\n\r\nclass SignUp extends Component {\r\n  constructor (props) {\r\n    super(props)\r\n\r\n    this.state = {\r\n      email: '',\r\n      password: '',\r\n      passwordConfirmation: ''\r\n    }\r\n  }\r\n\r\nhandleChange = (event) =>\r\n  this.setState({\r\n    [event.target.name]: event.target.value\r\n  })\r\n\r\nonSignUp = (event) => {\r\n  event.preventDefault()\r\n\r\n  const { msgAlert, history, setUser } = this.props\r\n\r\n  signUp(this.state)\r\n    .then(() => signIn(this.state))\r\n    .then((res) => setUser(res.data.user))\r\n    .then(() =>\r\n      msgAlert({\r\n        heading: 'Sign Up Success',\r\n        message: signUpSuccess,\r\n        variant: 'success'\r\n      })\r\n    )\r\n    .then(() => history.push('/'))\r\n    .catch((error) => {\r\n      this.setState({ email: '', password: '', passwordConfirmation: '' })\r\n      msgAlert({\r\n        heading: 'Sign Up Failed with error: ' + error.message,\r\n        message: signUpFailure,\r\n        variant: 'danger'\r\n      })\r\n    })\r\n}\r\n\r\nrender () {\r\n  const { email, password, passwordConfirmation } = this.state\r\n\r\n  return (\r\n    <div className='row'>\r\n      <div className='col-sm-10 col-md-8 mx-auto mt-5'>\r\n        <h3 className='text-white'>Sign Up</h3>\r\n        <Form onSubmit={this.onSignUp}>\r\n          <Form.Group controlId='email'>\r\n            <Form.Label className='text-white'>Email address</Form.Label>\r\n            <Form.Control\r\n              required\r\n              type='email'\r\n              name='email'\r\n              value={email}\r\n              placeholder='Enter email'\r\n              onChange={this.handleChange}\r\n            />\r\n          </Form.Group>\r\n          <Form.Group controlId='password'>\r\n            <Form.Label className='text-white'>Password</Form.Label>\r\n            <Form.Control\r\n              required\r\n              name='password'\r\n              value={password}\r\n              type='password'\r\n              placeholder='Password'\r\n              onChange={this.handleChange}\r\n            />\r\n          </Form.Group>\r\n          <Form.Group controlId='passwordConfirmation'>\r\n            <Form.Label className='text-white'>Password Confirmation</Form.Label>\r\n            <Form.Control\r\n              required\r\n              name='passwordConfirmation'\r\n              value={passwordConfirmation}\r\n              type='password'\r\n              placeholder='Confirm Password'\r\n              onChange={this.handleChange}\r\n            />\r\n          </Form.Group>\r\n          <Button variant='outline-dark' className='grad' type='submit' style={{\r\n            width: '100%',\r\n            marginTop: '25px'\r\n          }} >Submit</Button>\r\n        </Form>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n}\r\n\r\nexport default withRouter(SignUp)\r\n","export const signUpSuccess = 'Succesfully registered! You\\'ve been signed in as well.'\r\nexport const signUpFailure = 'Registration failed. Email may be taken, or passwords don\\'t match.'\r\nexport const signInSuccess = 'Welcome!'\r\nexport const signInFailure = 'Failed to sign in. Check your email and password and try again.'\r\nexport const signOutSuccess = 'Come back soon!'\r\nexport const changePasswordSuccess = 'Password changed successfully!'\r\nexport const changePasswordFailure = 'Failed to change passwords. Check your old password and try again.'\r\n","/* eslint-disable no-unused-vars */\r\nimport React, { Component } from 'react'\r\nimport { withRouter } from 'react-router-dom'\r\nimport colors from '../../index.scss'\r\nimport { signIn } from '../../api/auth'\r\nimport { signInSuccess, signInFailure } from '../AutoDismissAlert/messages'\r\n\r\nimport Form from 'react-bootstrap/Form'\r\nimport Button from 'react-bootstrap/Button'\r\n\r\nclass SignIn extends Component {\r\n  constructor (props) {\r\n    super(props)\r\n\r\n    this.state = {\r\n      email: '',\r\n      password: ''\r\n    }\r\n  }\r\n\r\nhandleChange = (event) =>\r\n  this.setState({\r\n    [event.target.name]: event.target.value\r\n  })\r\n\r\nonSignIn = (event) => {\r\n  event.preventDefault()\r\n\r\n  const { msgAlert, history, setUser } = this.props\r\n\r\n  signIn(this.state)\r\n    .then((res) => setUser(res.data.user))\r\n    .then(() =>\r\n      msgAlert({\r\n        heading: 'Sign In Success',\r\n        message: signInSuccess,\r\n        variant: 'success'\r\n      })\r\n    )\r\n    .then(() => history.push('/'))\r\n    .catch((error) => {\r\n      this.setState({ email: '', password: '' })\r\n      msgAlert({\r\n        heading: 'Sign In Failed with error: ' + error.message,\r\n        message: signInFailure,\r\n        variant: 'danger'\r\n      })\r\n    })\r\n}\r\n\r\nrender () {\r\n  const { email, password } = this.state\r\n\r\n  return (\r\n    <div className='row'>\r\n      <div className='col-sm-10 col-md-8 mx-auto mt-5'>\r\n        <h3 className='text-white' style={{ }}>Sign In </h3>\r\n        <Form onSubmit={this.onSignIn}>\r\n          <Form.Group controlId='email'>\r\n            <Form.Label className='text-white'>Email address</Form.Label>\r\n            <Form.Control\r\n              required\r\n              type='email'\r\n              name='email'\r\n              value={email}\r\n              placeholder='Enter email'\r\n              onChange={this.handleChange}\r\n            />\r\n          </Form.Group>\r\n          <Form.Group controlId='password'>\r\n            <Form.Label className='text-white'>Password</Form.Label>\r\n            <Form.Control\r\n              required\r\n              name='password'\r\n              value={password}\r\n              type='password'\r\n              placeholder='Password'\r\n              onChange={this.handleChange}\r\n            />\r\n          </Form.Group>\r\n          <Button variant='outline-dark' className='grad' type='submit' style={{\r\n            width: '100%',\r\n            marginTop: '25px'\r\n          }} >Submit</Button>\r\n        </Form>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n}\r\n\r\nexport default withRouter(SignIn)\r\n","import { Component } from 'react'\r\nimport { withRouter } from 'react-router-dom'\r\n\r\nimport { signOut } from '../../api/auth'\r\nimport { signOutSuccess } from '../AutoDismissAlert/messages'\r\n\r\nclass SignOut extends Component {\r\n  componentDidMount () {\r\n    const { msgAlert, history, clearUser, user } = this.props\r\n\r\n    signOut(user)\r\n      .finally(() =>\r\n        msgAlert({\r\n          heading: 'Signed Out Successfully',\r\n          message: signOutSuccess,\r\n          variant: 'success'\r\n        })\r\n      )\r\n      .finally(() => history.push('/'))\r\n      .finally(() => clearUser())\r\n  }\r\n\r\n  render () {\r\n    return ''\r\n  }\r\n}\r\n\r\nexport default withRouter(SignOut)\r\n","import React, { Component } from 'react'\r\nimport { withRouter } from 'react-router-dom'\r\n\r\nimport { changePassword } from '../../api/auth'\r\nimport { changePasswordSuccess, changePasswordFailure } from '../AutoDismissAlert/messages'\r\n\r\nimport Form from 'react-bootstrap/Form'\r\nimport Button from 'react-bootstrap/Button'\r\n\r\nclass ChangePassword extends Component {\r\n  constructor (props) {\r\n    super(props)\r\n\r\n    this.state = {\r\n      oldPassword: '',\r\n      newPassword: ''\r\n    }\r\n  }\r\n\r\nhandleChange = (event) =>\r\n  this.setState({\r\n    [event.target.name]: event.target.value\r\n  })\r\n\r\nonChangePassword = (event) => {\r\n  event.preventDefault()\r\n\r\n  const { msgAlert, history, user } = this.props\r\n\r\n  changePassword(this.state, user)\r\n    .then(() =>\r\n      msgAlert({\r\n        heading: 'Change Password Success',\r\n        message: changePasswordSuccess,\r\n        variant: 'success'\r\n      })\r\n    )\r\n    .then(() => history.push('/'))\r\n    .catch((error) => {\r\n      this.setState({ oldPassword: '', newPassword: '' })\r\n      msgAlert({\r\n        heading: 'Change Password Failed with error: ' + error.message,\r\n        message: changePasswordFailure,\r\n        variant: 'danger'\r\n      })\r\n    })\r\n}\r\n\r\nrender () {\r\n  const { oldPassword, newPassword } = this.state\r\n\r\n  return (\r\n    <div className='row'>\r\n      <div className='col-sm-10 col-md-8 mx-auto mt-5'>\r\n        <h3 className='text-white'>Change Password</h3>\r\n        <Form onSubmit={this.onChangePassword}>\r\n          <Form.Group controlId='oldPassword'>\r\n            <Form.Label className='text-white'>Old password</Form.Label>\r\n            <Form.Control\r\n              required\r\n              name='oldPassword'\r\n              value={oldPassword}\r\n              type='password'\r\n              placeholder='Old Password'\r\n              onChange={this.handleChange}\r\n            />\r\n          </Form.Group>\r\n          <Form.Group controlId='newPassword'>\r\n            <Form.Label className='text-white'>New Password</Form.Label>\r\n            <Form.Control\r\n              required\r\n              name='newPassword'\r\n              value={newPassword}\r\n              type='password'\r\n              placeholder='New Password'\r\n              onChange={this.handleChange}\r\n            />\r\n          </Form.Group>\r\n          <Button variant='outline-dark' className='grad' type='submit' style={{\r\n            width: '100%',\r\n            marginTop: '25px'\r\n          }} >Submit</Button>\r\n        </Form>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n}\r\n\r\nexport default withRouter(ChangePassword)\r\n","import apiUrl from '../apiConfig'\r\nimport axios from 'axios'\r\n\r\n// create list request\r\nexport const createList = (data, user) => {\r\n  return axios({\r\n    url: apiUrl + '/lists',\r\n    method: 'post',\r\n    data: { list: data },\r\n    headers: {\r\n      Authorization: `Bearer ${user.token}`\r\n    }\r\n  })\r\n}\r\n\r\n// index of all lists\r\nexport const indexList = (user) => {\r\n  return axios({\r\n    url: apiUrl + '/lists',\r\n    method: 'get',\r\n    headers: {\r\n      Authorization: `Bearer ${user.token}`\r\n    }\r\n  })\r\n}\r\n\r\n// show one list\r\nexport const showList = (id, user) => {\r\n  return axios({\r\n    url: apiUrl + '/lists/' + id,\r\n    method: 'get',\r\n    headers: {\r\n      Authorization: `Bearer ${user.token}`\r\n    }\r\n  })\r\n}\r\n\r\n// delete a list\r\nexport const deleteList = (id, user) => {\r\n  return axios({\r\n    url: apiUrl + '/lists/' + id,\r\n    method: 'delete',\r\n    headers: {\r\n      Authorization: `Bearer ${user.token}`\r\n    }\r\n  })\r\n}\r\n\r\n// edit/update list\r\nexport const updateList = (listData, id, user) => {\r\n  return axios({\r\n    method: 'PATCH',\r\n    url: apiUrl + '/lists/' + id,\r\n    headers: {\r\n      Authorization: `Bearer ${user.token}`\r\n    },\r\n    data: { list: listData }\r\n  })\r\n}\r\n","import React, { Component } from 'react'\r\nimport { withRouter } from 'react-router-dom'\r\n\r\nimport Dropdown from 'react-bootstrap/Dropdown'\r\nimport Form from 'react-bootstrap/Form'\r\nimport Button from 'react-bootstrap/Button'\r\nimport { createList } from '../../api/list'\r\n\r\nclass CreateList extends Component {\r\n  constructor (props) {\r\n    super(props)\r\n    this.state = {\r\n      list: {\r\n        name: '',\r\n        month: 0\r\n      },\r\n      dropdownMonth: 'Month'\r\n    }\r\n  }\r\n\r\n  months = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December']\r\n\r\n  handleChange = (event) => {\r\n    const copiedList = Object.assign(this.state.list)\r\n    if (event.target.name === 'name') {\r\n      // copies list object then alters the value(event target value)\r\n      copiedList[event.target.name] = event.target.value\r\n    } else {\r\n      // set copied month to event.target.name(number) and set dropdownMonth to months array index event.target.name(number)\r\n      copiedList.month = event.target.name\r\n      this.setState({ dropdownMonth: this.months[event.target.name] })\r\n    }\r\n    this.setState({ list: copiedList })\r\n  }\r\n\r\n  handleSubmit = (event) => {\r\n    event.preventDefault()\r\n    const { user, msgAlert, history } = this.props\r\n\r\n    createList(this.state.list, user)\r\n      .then(res => history.push('/lists/' + res.data.list._id))\r\n      .then(() => msgAlert({\r\n        heading: 'List created',\r\n        message: 'nice work go check out your list',\r\n        variant: 'success'\r\n      }))\r\n      .catch(err => {\r\n        msgAlert({\r\n          heading: 'list creation failed',\r\n          message: 'something went wrong ' + err.message,\r\n          variant: 'danger'\r\n        })\r\n      })\r\n  }\r\n\r\n  render () {\r\n    const { list, dropdownMonth } = this.state\r\n\r\n    const date = new Date()\r\n    const filteredMonths = this.months.filter((month, i) => i >= date.getMonth())\r\n    const dropdownJSX = filteredMonths.map(month => (\r\n      <Dropdown.Item key={month} onClick={this.handleChange} name={this.months.indexOf(month)}>{month}</Dropdown.Item>\r\n    ))\r\n\r\n    return (\r\n      <div>\r\n        <Form onSubmit={this.handleSubmit}>\r\n          <Form.Group controlId='name'>\r\n            <Form.Label className='text-white'>List name:</Form.Label>\r\n            <Form.Control\r\n              required\r\n              name='name'\r\n              value={list.name}\r\n              placeholder='List Name'\r\n              onChange={this.handleChange}\r\n            />\r\n\r\n            <Dropdown>\r\n              <Dropdown.Toggle variant=\"warning\" id=\"dropdown-basic\">\r\n                {dropdownMonth}\r\n              </Dropdown.Toggle>\r\n\r\n              <Dropdown.Menu>\r\n                {dropdownJSX}\r\n              </Dropdown.Menu>\r\n            </Dropdown>\r\n\r\n          </Form.Group>\r\n          <Button type=\"submit\" variant='dark'>Submit</Button>\r\n        </Form>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withRouter(CreateList)\r\n","import React, { Component } from 'react'\r\nimport { indexList } from '../../api/list'\r\nimport { Link } from 'react-router-dom'\r\nimport Button from 'react-bootstrap/Button'\r\nimport logo from '../pictures/NavBarLogo.png'\r\n\r\nclass IndexList extends Component {\r\n  constructor (props) {\r\n    super(props)\r\n\r\n    this.state = {\r\n      list: [],\r\n      loading: false\r\n    }\r\n  }\r\n\r\n  months = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December']\r\n\r\n  // - lifecycle method (right away when this component renders, make a request for all the list & put em in state)\r\n  componentDidMount = () => {\r\n    const { user } = this.props\r\n    indexList(user)\r\n      .then((res) => {\r\n        this.setState({\r\n          list: res.data.lists\r\n        })\r\n      })\r\n      .catch(console.error)\r\n  }\r\n\r\n  // render\r\n  render () {\r\n    const { list } = this.state\r\n    const { user } = this.props\r\n\r\n    let listJsx\r\n    if (list.length === 0) {\r\n      listJsx = <h3>No list, go create some</h3>\r\n    } else {\r\n      // filter through list and return lists where owner matches user id\r\n      const filteredList = list.filter(list => user._id === list.owner)\r\n      listJsx = filteredList.map(list => (\r\n        <h3 key={list._id}>\r\n          <Link to={`/lists/${list._id}`}>{list.name}</Link>\r\n          <p style={{ fontSize: '15px', color: 'DarkGray' }}>- {this.months[list.month]}</p>\r\n        </h3>\r\n      ))\r\n    }\r\n\r\n    return (\r\n      <div className='text-center'>\r\n        <img src={logo} /> <br />\r\n        <Link className='link-warning' variant='outline-dark' to={'/create-list'}>\r\n          <Button className='grad' variant='outline-dark' style={{ margin: '20px 0' }}>Create List</Button>\r\n          {listJsx}\r\n        </Link>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default IndexList\r\n","import apiUrl from '../apiConfig'\r\nimport axios from 'axios'\r\n\r\n// create list request\r\nexport const createTask = (id, data, user) => {\r\n  return axios({\r\n    url: apiUrl + '/tasks/' + id,\r\n    method: 'post',\r\n    data: { task: data },\r\n    headers: {\r\n      Authorization: `Bearer ${user.token}`\r\n    }\r\n  })\r\n}\r\n\r\n// delete a task\r\nexport const deleteTask = (id, user, taskId) => {\r\n  return axios({\r\n    url: apiUrl + '/tasks/' + id + '/' + taskId,\r\n    method: 'delete',\r\n    headers: {\r\n      Authorization: `Bearer ${user.token}`\r\n    }\r\n  })\r\n}\r\n\r\n// edit/update task\r\nexport const updateTask = (taskData, id, user, taskId) => {\r\n  return axios({\r\n    method: 'PATCH',\r\n    url: apiUrl + '/tasks/' + id + '/' + taskId,\r\n    headers: {\r\n      Authorization: `Bearer ${user.token}`\r\n    },\r\n    data: { task: taskData }\r\n  })\r\n}\r\n// show one task\r\nexport const showTask = (id, user, taskId) => {\r\n  return axios({\r\n    url: apiUrl + '/tasks/' + id + '/' + taskId,\r\n    method: 'get',\r\n    headers: {\r\n      Authorization: `Bearer ${user.token}`\r\n    }\r\n  })\r\n}\r\n","/* eslint-disable node/handle-callback-err */\r\nimport React, { Component } from 'react'\r\nimport { Link, withRouter } from 'react-router-dom'\r\nimport { deleteTask, updateTask } from '../../api/task'\r\nimport Button from 'react-bootstrap/Button'\r\nimport Card from 'react-bootstrap/Card'\r\n\r\nclass ShowTask extends Component {\r\n  constructor (props) {\r\n    super(props)\r\n    this.state = {\r\n      task: {}\r\n      // done: false\r\n    }\r\n  }\r\n\r\n  componentDidMount () {\r\n    const { task } = this.props\r\n    this.setState({ task: task })\r\n  }\r\n\r\n  complete = () => {\r\n    const { user, msgAlert, history, match } = this.props\r\n\r\n    const copiedTask = Object.assign(this.state.task)\r\n    copiedTask.done = !copiedTask.done\r\n    this.setState({ task: copiedTask })\r\n\r\n    updateTask(this.state.task, match.params.id, user, this.state.task._id)\r\n      .then(() => history.push('/'))\r\n      .then(() => history.push(match.url))\r\n      .then(() =>\r\n        msgAlert({\r\n          heading: 'Task has been Updated!',\r\n          message: 'Nice work, go check out your list.',\r\n          variant: 'success'\r\n        })\r\n      )\r\n      .catch((err) => {\r\n        msgAlert({\r\n          heading: 'List update failed :(',\r\n          message: 'Something went wrong: ' + err.message,\r\n          variant: 'danger'\r\n        })\r\n      })\r\n  }\r\n\r\n  deleteTask = (taskId) => {\r\n    const { match, user, msgAlert, history } = this.props\r\n    deleteTask(match.params.id, user, taskId)\r\n      // Redirect to the index of lists\r\n      .then(() => history.push('/'))\r\n      .then(() => history.push(match.url))\r\n      .then(() =>\r\n        msgAlert({\r\n          heading: 'Successfully Deleted Task',\r\n          message: 'Your task no longer exists',\r\n          variant: 'success'\r\n        })\r\n      )\r\n      .catch((err) =>\r\n        msgAlert({\r\n          heading: 'Failed to Delete Task',\r\n          message: 'Something went wrong: ' + err.message,\r\n          variant: 'danger'\r\n        })\r\n      )\r\n  }\r\n\r\n  render () {\r\n    if (this.state.task === null) {\r\n      return 'Loading...'\r\n    }\r\n\r\n    const { match, task } = this.props\r\n    return (\r\n      <>\r\n        <Card key={task._id} className='card-grad m-2 ' style={{\r\n          width: '18rem',\r\n          height: '20rem',\r\n          color: 'white'\r\n        }}>\r\n          <Card.Header className='dark-bg text white'>Your Task:</Card.Header>\r\n          <Card.Body className='dark-bg'>\r\n            <Card.Title className='text-warning' style={{ overflow: 'auto' }}>{task.item}</Card.Title>\r\n            <div className='align-items-end' style={{\r\n              position: 'relative',\r\n              top: '7rem'\r\n              // marginTop: '10px'\r\n            }}>\r\n              <Link to={{ pathname: `/lists/${match.params.id}/edit-task`, taskId: task._id }}>\r\n                <Button variant=\"dark\" style={{ width: '50%' }}>Edit</Button>\r\n              </Link>\r\n              <Button onClick={() => this.deleteTask(task._id)} variant=\"dark\" style={{ width: '50%' }}>Delete</Button>\r\n\r\n              <Button variant=\"warning\" onClick={this.complete} style={{ width: '100%', marginTop: '1rem' }}>{task.done ? 'Completed' : 'Uncompleted'}</Button>\r\n            </div>\r\n          </Card.Body>\r\n        </Card>\r\n      </>\r\n    )\r\n  }\r\n}\r\nexport default withRouter(ShowTask)\r\n","/* eslint-disable node/handle-callback-err */\r\nimport React, { Component } from 'react'\r\nimport { withRouter } from 'react-router-dom'\r\nimport { showList, deleteList } from '../../api/list'\r\nimport Button from 'react-bootstrap/Button'\r\nimport ShowTask from '../task/ShowTask'\r\n// import Card from 'react-bootstrap/Card'\r\n\r\nclass ShowList extends Component {\r\n  constructor (props) {\r\n    super(props)\r\n    this.state = {\r\n      list: null,\r\n      deleted: false\r\n    }\r\n  }\r\n\r\n  months = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December']\r\n\r\n  componentDidMount () {\r\n    const { match, user, msgAlert } = this.props\r\n\r\n    showList(match.params.id, user)\r\n      .then((res) => this.setState({ list: res.data.list }))\r\n      .catch(err => msgAlert({\r\n        heading: 'Show list failed',\r\n        message: 'Something went wrong',\r\n        variant: 'danger'\r\n      }))\r\n  }\r\n\r\n  destroy = () => {\r\n    const { match, user, msgAlert, history } = this.props\r\n    deleteList(match.params.id, user)\r\n    // Redirect to the list index\r\n      .then(() => history.push('/lists'))\r\n      .then(() =>\r\n        msgAlert({\r\n          heading: 'Successfully Deleted',\r\n          message: 'Your list no longer exists',\r\n          variant: 'success'\r\n        })\r\n      )\r\n      .catch((err) =>\r\n        msgAlert({\r\n          heading: 'Failed to Delete List',\r\n          message: 'Something went wrong: ' + err.message,\r\n          variant: 'danger'\r\n        })\r\n      )\r\n  }\r\n\r\n  render () {\r\n    if (this.state.list === null) {\r\n      return 'Loading...'\r\n    }\r\n    const { owner } = this.state.list\r\n    const { user, history, match, msgAlert } = this.props\r\n    const { list } = this.state\r\n    const showTasks = list.tasks.map(task => (\r\n      <ShowTask key={task._id} task={task} user={user} msgAlert={msgAlert} />\r\n    ))\r\n\r\n    return (\r\n      <>\r\n        <div className='text-center'>\r\n          <h3 className='text-white'>{list.name}</h3>\r\n          <p className='text-white'> Month: {this.months[list.month]}</p>\r\n          {user._id === owner && (\r\n            <>\r\n              <Button onClick={this.destroy} className='text-white' variant='dark'>Delete List</Button>{' '}\r\n              <Button onClick={() => history.push(`/lists/${match.params.id}/update-list`)} className='text-white' variant='dark'>\r\n              Edit List\r\n              </Button> {' '}\r\n              <Button onClick={() => history.push(`/lists/${match.params.id}/create-task`)}className='text-white' variant='dark'>Create Task</Button>\r\n              <div style={{\r\n                display: 'flex',\r\n                flexWrap: 'wrap'\r\n              }}>\r\n                {showTasks}\r\n              </div>\r\n            </>\r\n          )}\r\n        </div>\r\n      </>\r\n    )\r\n  }\r\n}\r\nexport default withRouter(ShowList)\r\n","import React, { Component } from 'react'\r\nimport { withRouter } from 'react-router-dom'\r\nimport Dropdown from 'react-bootstrap/Dropdown'\r\nimport Form from 'react-bootstrap/Form'\r\nimport Button from 'react-bootstrap/Button'\r\n// API request\r\nimport { updateList, showList } from '../../api/list'\r\n\r\nclass UpdateList extends Component {\r\n  constructor (props) {\r\n    super(props)\r\n    this.state = {\r\n      list: {\r\n        name: '',\r\n        month: 0\r\n      },\r\n      dropdownMonth: 'Month'\r\n    }\r\n  }\r\n\r\n  months = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December']\r\n\r\n  componentDidMount () {\r\n    // one of the automatic router props we get is the match object - that has data about the params in our front-end route url\r\n    const { match, user, msgAlert } = this.props\r\n\r\n    showList(match.params.id, user)\r\n      .then((res) => this.setState({ list: res.data.list }))\r\n      .then(() =>\r\n        msgAlert({\r\n          heading: 'Show list success',\r\n          message: 'Check out the list',\r\n          variant: 'success'\r\n        })\r\n      )\r\n      .catch((err) =>\r\n        msgAlert({\r\n          heading: 'Show list failed, try again!',\r\n          message: 'Something went wrong: ' + err.message,\r\n          variant: 'danger'\r\n        })\r\n      )\r\n  }\r\n\r\n  handleChange = (event) => {\r\n    const copiedList = Object.assign(this.state.list)\r\n    if (event.target.name === 'name') {\r\n      // copies list object then alters the value(event target value)\r\n      copiedList[event.target.name] = event.target.value\r\n    } else {\r\n      // set copied month to event.target.name(number) and set dropdownMonth to months array index event.target.name(number)\r\n      copiedList.month = event.target.name\r\n      this.setState({ dropdownMonth: this.months[event.target.name] })\r\n    }\r\n    this.setState({ list: copiedList })\r\n  }\r\n\r\n handleSubmit = (event) => {\r\n   event.preventDefault()\r\n\r\n   const { user, msgAlert, history, match } = this.props\r\n\r\n   updateList(this.state.list, match.params.id, user)\r\n     .then((res) => history.push('/lists/' + match.params.id))\r\n     .then(() =>\r\n       msgAlert({\r\n         heading: 'List Updated!',\r\n         message: 'Nice work, go check out your list.',\r\n         variant: 'success'\r\n       })\r\n     )\r\n     .catch((err) => {\r\n       msgAlert({\r\n         heading: 'List update failed :(',\r\n         message: 'Something went wrong: ' + err.message,\r\n         variant: 'danger'\r\n       })\r\n     })\r\n }\r\n\r\n render () {\r\n   const { list, dropdownMonth } = this.state\r\n\r\n   const date = new Date()\r\n   const filteredMonths = this.months.filter((month, i) => i >= date.getMonth())\r\n   const dropdownJSX = filteredMonths.map(month => (\r\n     <Dropdown.Item key={month} onClick={this.handleChange} name={this.months.indexOf(month)}>{month}</Dropdown.Item>\r\n   ))\r\n\r\n   return (\r\n     <div>\r\n       <Form onSubmit={this.handleSubmit}>\r\n         <Form.Group controlId='name'>\r\n           <Form.Label className='text-white'>List name</Form.Label>\r\n           <Form.Control\r\n             required\r\n             name='name'\r\n             value={list.name}\r\n             placeholder='List Name'\r\n             onChange={this.handleChange}\r\n           />\r\n\r\n           <Dropdown>\r\n             <Dropdown.Toggle variant=\"warning\" id=\"dropdown-basic\">\r\n               {dropdownMonth}\r\n             </Dropdown.Toggle>\r\n\r\n             <Dropdown.Menu>\r\n               {dropdownJSX}\r\n             </Dropdown.Menu>\r\n           </Dropdown>\r\n         </Form.Group>\r\n         <Button type=\"submit\" className='text-white' variant='dark'>Update List</Button>\r\n       </Form>\r\n     </div>\r\n   )\r\n }\r\n}\r\n\r\nexport default withRouter(UpdateList)\r\n","import React, { Component } from 'react'\r\nimport { withRouter } from 'react-router-dom'\r\nimport Form from 'react-bootstrap/Form'\r\nimport Button from 'react-bootstrap/Button'\r\nimport { createTask } from '../../api/task'\r\n\r\nclass CreateTask extends Component {\r\n  constructor (props) {\r\n    super(props)\r\n\r\n    this.state = {\r\n      task: {\r\n        item: '',\r\n        done: false\r\n      }\r\n    }\r\n  }\r\n\r\n  handleChange = (event) => {\r\n    const copiedTask = Object.assign(this.state.task)\r\n    copiedTask[event.target.name] = event.target.value\r\n    this.setState({ task: copiedTask })\r\n  }\r\n\r\n  handleSubmit = (event) => {\r\n    event.preventDefault()\r\n\r\n    const { user, msgAlert, history, match } = this.props\r\n    createTask(match.params.id, this.state.task, user)\r\n      .then(res => history.push('/lists/' + res.data.list._id))\r\n      .then(() => msgAlert({ heading: 'Task Created!', message: 'Nice work, go check out your task.', variant: 'success' }))\r\n      .catch(err => {\r\n        msgAlert({\r\n          heading: 'Task creation failed :(',\r\n          message: 'Something went wrong: ' + err.message,\r\n          variant: 'danger'\r\n        })\r\n      })\r\n  }\r\n\r\n  render () {\r\n    return (\r\n      <>\r\n        <h3 className='text-white'>Create Task :</h3>\r\n        <Form onSubmit={this.handleSubmit}>\r\n          <Form.Group controlId='item'>\r\n            <Form.Label className='text-white'>Task name</Form.Label>\r\n            <Form.Control\r\n              required\r\n              name='item'\r\n              value={this.state.task.item}\r\n              placeholder='Task Name'\r\n              onChange={this.handleChange}\r\n            />\r\n          </Form.Group>\r\n          <Button type=\"submit\" variant='warning'>Submit</Button>\r\n        </Form>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withRouter(CreateTask)\r\n","import React, { Component } from 'react'\r\nimport { withRouter } from 'react-router-dom'\r\n// import Dropdown from 'react-bootstrap/Dropdown'\r\nimport Form from 'react-bootstrap/Form'\r\nimport Button from 'react-bootstrap/Button'\r\n// API request\r\nimport { updateTask, showTask } from '../../api/task'\r\n\r\nclass UpdateTask extends Component {\r\n  constructor (props) {\r\n    super(props)\r\n    this.state = {\r\n      task: {\r\n        item: '',\r\n        done: false\r\n      }\r\n    }\r\n  }\r\n\r\n  componentDidMount () {\r\n    // one of the automatic router props we get is the match object - that has data about the params in our front-end route url\r\n    const { match, user, location } = this.props\r\n\r\n    showTask(match.params.id, user, location.taskId)\r\n      .then((res) => this.setState({ task: res.data.task }))\r\n  }\r\n\r\nhandleChange = (event) => {\r\n  const copiedTask = Object.assign(this.state.task)\r\n  copiedTask[event.target.name] = event.target.value\r\n  this.setState({ task: copiedTask })\r\n}\r\n\r\nhandleSubmit = (event) => {\r\n  event.preventDefault()\r\n\r\n  const { user, msgAlert, history, match, location } = this.props\r\n\r\n  updateTask(this.state.task, match.params.id, user, location.taskId)\r\n    .then((res) => history.push('/lists/' + match.params.id))\r\n    .then(() =>\r\n      msgAlert({\r\n        heading: 'Task Updated!',\r\n        message: 'Nice work, go check out your updated task.',\r\n        variant: 'success'\r\n      })\r\n    )\r\n    .catch((err) => {\r\n      msgAlert({\r\n        heading: 'Task update failed :(',\r\n        message: 'Something went wrong: ' + err.message,\r\n        variant: 'danger'\r\n      })\r\n    })\r\n}\r\n\r\nrender () {\r\n  const { task } = this.state\r\n  return (\r\n    <div>\r\n      <Form onSubmit={this.handleSubmit}>\r\n        <Form.Group controlId='name'>\r\n          <Form.Label className='text-white'>New Task Name:</Form.Label>\r\n          <Form.Control className='text-dark'\r\n            required\r\n            name='item'\r\n            value={task.item}\r\n            placeholder='new task name'\r\n            onChange={this.handleChange}\r\n          />\r\n        </Form.Group>\r\n        <Button variant='outline-dark' className='grad' type='submit' style={{\r\n          width: '100%',\r\n          marginTop: '25px'\r\n        }} >Submit</Button>\r\n      </Form>\r\n    </div>\r\n  )\r\n}\r\n}\r\n\r\nexport default withRouter(UpdateTask)\r\n","export default __webpack_public_path__ + \"static/media/BigLogoM.4d0ec502.png\";","import React from 'react'\r\nimport BigLogoM from '../pictures/BigLogoM.png'\r\n\r\nexport default function Home () {\r\n  return (\r\n    <div>\r\n      <img id='big-m' src={BigLogoM} className='bob-down' />\r\n    </div>\r\n  )\r\n}\r\n","/* eslint-disable no-tabs */\r\nimport React, { Component, Fragment } from 'react'\r\nimport { Route } from 'react-router-dom'\r\nimport { v4 as uuid } from 'uuid'\r\n\r\nimport AuthenticatedRoute from './components/AuthenticatedRoute/AuthenticatedRoute'\r\nimport AutoDismissAlert from './components/AutoDismissAlert/AutoDismissAlert'\r\nimport Header from './components/Header/Header'\r\nimport SignUp from './components/auth/SignUp'\r\nimport SignIn from './components/auth/SignIn'\r\nimport SignOut from './components/auth/SignOut'\r\nimport ChangePassword from './components/auth/ChangePassword'\r\nimport CreateList from './components/list/CreateList'\r\nimport IndexList from './components/list/IndexList'\r\nimport ShowList from './components/list/ShowList'\r\nimport UpdateList from './components/list/UpdateList'\r\nimport CreateTask from './components/task/CreateTask'\r\nimport UpdateTask from './components/task/UpdateTask'\r\nimport Home from './components/Home/Home'\r\n\r\nclass App extends Component {\r\n  constructor (props) {\r\n    super(props)\r\n    this.state = {\r\n      user: null,\r\n      msgAlerts: []\r\n    }\r\n  }\r\n\r\n  setUser = (user) => this.setState({ user })\r\n\r\n  clearUser = () => this.setState({ user: null })\r\n\r\n  deleteAlert = (id) => {\r\n    this.setState((state) => {\r\n      return { msgAlerts: state.msgAlerts.filter((msg) => msg.id !== id) }\r\n    })\r\n  }\r\n\r\n  msgAlert = ({ heading, message, variant }) => {\r\n    const id = uuid()\r\n    this.setState((state) => {\r\n      return {\r\n        msgAlerts: [...state.msgAlerts, { heading, message, variant, id }]\r\n      }\r\n    })\r\n  }\r\n\r\n  render () {\r\n    const { msgAlerts, user } = this.state\r\n\r\n    return (\r\n      <Fragment>\r\n        <Header user={user} />\r\n        {msgAlerts.map((msgAlert) => (\r\n          <AutoDismissAlert\r\n            key={msgAlert.id}\r\n            heading={msgAlert.heading}\r\n            variant={msgAlert.variant}\r\n            message={msgAlert.message}\r\n            id={msgAlert.id}\r\n            deleteAlert={this.deleteAlert}\r\n          />\r\n        ))}\r\n        <main className='container'>\r\n          <Route\r\n            path='/sign-up'\r\n            render={() => (\r\n              <SignUp msgAlert={this.msgAlert} setUser={this.setUser} />\r\n            )}\r\n          />\r\n          <Route\r\n            path='/sign-in'\r\n            render={() => (\r\n              <SignIn msgAlert={this.msgAlert} setUser={this.setUser} />\r\n            )}\r\n          />\r\n          <Route\r\n            path='/'\r\n            exact\r\n            render={() => (\r\n              <Home msgAlert={this.msgAlert} setUser={this.setUser} />\r\n            )}\r\n          />\r\n          <AuthenticatedRoute\r\n            user={user}\r\n            path='/sign-out'\r\n            render={() => (\r\n              <SignOut\r\n                msgAlert={this.msgAlert}\r\n                clearUser={this.clearUser}\r\n                user={user}\r\n              />\r\n            )}\r\n          />\r\n          <AuthenticatedRoute\r\n            user={user}\r\n            path='/change-password'\r\n            render={() => (\r\n              <ChangePassword msgAlert={this.msgAlert} user={user} />\r\n            )}\r\n          />\r\n          <AuthenticatedRoute\r\n            user={user}\r\n            path='/create-list'\r\n            render={() => <CreateList msgAlert={this.msgAlert} user={user} />}\r\n          />\r\n          <AuthenticatedRoute\r\n            user={user}\r\n            path='/lists/:id/update-list'\r\n            render={() => <UpdateList msgAlert={this.msgAlert} user={user} />}\r\n          />\r\n          <AuthenticatedRoute\r\n            user={user}\r\n            exact\r\n            path='/lists'\r\n            render={() => <IndexList msgAlert={this.msgAlert} user={user} />}\r\n          />\r\n\r\n          <AuthenticatedRoute\r\n            user={user}\r\n            path='/lists/:id'\r\n            exact\r\n            render={() => <ShowList msgAlert={this.msgAlert} user={user} />}\r\n          />\r\n          <AuthenticatedRoute\r\n            user={user}\r\n            path='/lists/:id/create-task'\r\n            render={() => <CreateTask msgAlert={this.msgAlert} user={user} />}\r\n          />\r\n          <AuthenticatedRoute\r\n            user={user}\r\n            path='/lists/:id/edit-task'\r\n            render={() => <UpdateTask msgAlert={this.msgAlert} user={user} />}\r\n          />\r\n        </main>\r\n      </Fragment>\r\n    )\r\n  }\r\n}\r\n\r\nexport default App\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './index.scss'\r\n\r\nimport App from './App'\r\nimport { BrowserRouter } from 'react-router-dom'\r\n\r\nconst appJsx = (\r\n  <BrowserRouter basename={process.env.PUBLIC_URL}>\r\n    <App />\r\n  </BrowserRouter>\r\n)\r\n\r\nReactDOM.render(appJsx, document.getElementById('root'))\r\n"],"sourceRoot":""}